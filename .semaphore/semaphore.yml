version: v1.0
name: Initial Pipeline

agent:
  machine:
    type: e1-standard-2

global_job_config:
  env_vars:
  - name: CMAKE_VERSION
    value: "3.16.5"
  - name: CC
    value: gcc-7

blocks:
- name: Download CMake
  task:
    jobs:
    - name: Download
      matrix:
      - env_var: CMAKE_VERSION
        values:
        - "3.12.4"
        - "3.13.5"
        - "3.14.7"
        - "3.15.6"
        - "3.16.5"
        - "3.17.0"
      commands:
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - wget -N "https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz"
      - cache store "CMake-$CMAKE_VERSION-Linux-x86_64" "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz"

- name: Analysis
  task:
    jobs:
    - name: Address
      env_vars:
      - name: CC
        value: gcc-8
      - name: ASAN_OPTIONS
        value: "detect_stack_use_after_return=1,detect_invalid_pointer_pairs=1"
      - name: CFLAGS
        value: >
          -fsanitize=address,pointer-compare,pointer-subtract
          -fsanitize-address-use-after-scope
      commands:
      - if [[ $CC = clang-* ]]; then sudo install-package "$CC"; fi
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - sudo tar -C /usr/local -xzf "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" --strip-components=1
      - checkout
      - cmake .
      - ctest --output-on-failure

    - name: Undefined Behavior
      env_vars:
      - name: CFLAGS
        value: -fsanitize=undefined
      commands:
      - if [[ $CC = clang-* ]]; then sudo install-package "$CC"; fi
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - sudo tar -C /usr/local -xzf "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" --strip-components=1
      - checkout
      - cmake .
      - ctest --output-on-failure

- name: Unit Test
  task:
    jobs:
    - name: Test 1
      matrix:
      - env_var: CC
        values:
        - gcc-5
        - gcc-6
        - gcc-8
        - clang-6.0
        - clang-7
        - clang-8
        - clang-9
      commands:
      - if [[ $CC = clang-* ]]; then sudo install-package "$CC"; fi
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - sudo tar -C /usr/local -xzf "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" --strip-components=1
      - checkout

      - mkdir shared
      - cd shared
      - cmake -DBUILD_SHARED_LIBS=ON ..
      - make
      - cd ..

      - mkdir static
      - cd static
      - cmake -DBUILD_SHARED_LIBS=OFF ..
      - make
      - cd ..

      - cmake .
      - make
      - ctest --output-on-failure

    - name: Test 2
      matrix:
      - env_var: CMAKE_VERSION
        values:
        - "3.13.5"
        - "3.14.7"
        - "3.15.6"
        - "3.17.0"
      commands:
      - if [[ $CC = clang-* ]]; then sudo install-package "$CC"; fi
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - sudo tar -C /usr/local -xzf "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" --strip-components=1
      - checkout

      - mkdir shared
      - cd shared
      - cmake -DBUILD_SHARED_LIBS=ON ..
      - make
      - cd ..

      - mkdir static
      - cd static
      - cmake -DBUILD_SHARED_LIBS=OFF ..
      - make
      - cd ..

      - cmake .
      - make
      - ctest --output-on-failure

- name: Coverage
  task:
    secrets:
    - name: Vector CI Codecov
    jobs:
    - name: Coverage
      commands:
      - if [[ $CC = clang-* ]]; then sudo install-package "$CC"; fi
      - cache restore "CMake-$CMAKE_VERSION-Linux-x86_64"
      - sudo tar -C /usr/local -xzf "cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz" --strip-components=1
      - checkout
      - cmake . -DCODE_COVERAGE=ON
      - ctest --output-on-failure
      - bash <(curl -s https://codecov.io/bash)
